# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - name: imageRepository 
    value: azure-container-registry-name.azurecr.io
  - name: imageName
    value: react-app
  - name: imageTag
    value: $(Build.BuildId)
  - name: terraformFolder
    value: terraform
  - name: service-connection
    value: assessment
  - name: ResourceGroupName
    value: oluseungrpnew
  - name: StorageAccountName
    value : oluwaseunstrrandiii
  - name: ContainerName
    value: oluwaseuncontainer
  - name: Location
    value: "eastus2"
 

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    displayName: Install Node.js
    inputs:
      versionSpec: '16.x'

  - script: |
      npm install
    displayName: Install app dependencies

  - script: |
      npm run test
    displayName: Test app

  - script: |
      npm run build
    displayName: Build app

  # - task: Docker@2
  #   displayName: Build Docker image
  #   inputs:
  #     containerRegistry: $(azure-container-registry-name)
  #     repository: $(imageRepository)/$(imageName)
  #     command: build
  #     Dockerfile: $(System.DefaultWorkingDirectory)/Dockerfile
  #     tags: |
  #       $(imageTag)

  # - task: Docker@2
  #   displayName: Push Docker image
  #   inputs:
  #     containerRegistry: $(azure-container-registry-name)
  #     repository: $(imageRepository)/$(imageName)
  #     command: push
  #     tags: |
  #       $(imageTag)

