# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - name: docker_svc_connection 
    value: "docker_service_connection"
  - name: imageRepository
    value: springboot-app
  - name: tag
    value: $(Build.BuildId)
  - name: Location
    value: "eastus2"
  - name: containerRegistryName
    value: oluwaseunreg.azurecr.io
  - name: appServiceName
    value: seunismaila-app-service
  - name: sub_service_connection
    value: "assessment"
  - name: imagePullSecret
    value: "image_secret"
  - name: k8sNamespace
    value: 
 
trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - terraform

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  jobs:
  - job: Test
    steps:
      - task: Maven@4
        displayName: "Package and Test App"
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'clean package'
          options: '-B'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
- stage: Docker
  jobs:
  - job: Build
    steps:
      - task: Docker@2
        displayName: "Login to ACR"
        inputs:
          command: 'login'
          containerRegistry: '$(docker_svc_connection)'
      - task: Docker@2
        displayName: "Build docker image"
        inputs:
          command: 'build'
          dockerfile: '**/Dockerfile'
          repository: $(imageRepository)
          tags: 'latest'
          containerRegistry: '$(docker_svc_connection)'
      - task: Docker@2
        displayName: "Push docker Image to ACR"
        inputs:
          command: 'push'
          repository: $(imageRepository)
          containerRegistry: '$(docker_svc_connection)'
          tags: "latest"
- stage: Validation
  jobs:
  - job: manual_approval
    displayName: "Manual Approval"
    pool: server
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 5
      inputs:
        instructions: "Hi, please validate"
        notifyUsers: "oluseun.ismaila@gmail.com"
- stage: Deployment
  jobs:
  - job: deploy_to_appservice
    displayName: "Deploying to App Service"
    steps:
      - task: KubernetesManifest@0
        displayName: Create imagePullSecret
        inputs:
          action: createSecret
          secretName: $(imagePullSecret)
          dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

      - task: KubernetesManifest@0
        displayName: Deploy to Kubernetes cluster
        inputs:
          action: deploy
          manifests: |
            ./manifests/deployment.yml
            ./manifests/service.yml
          imagePullSecrets: |
            $(imagePullSecret)
          containers: |
            $(containerRegistryName)/$(imageRepository):latest'


  # - job: deploy_to_appservice
  #   displayName: "Deploying to App Service"
  #   steps:
  #   - task: AzureWebAppContainer@1
  #     inputs:
  #       azureSubscription: $(sub_service_connection)
  #       appName: $(appServiceName)
  #       containers: '$(containerRegistryName)/$(imageRepository):latest'